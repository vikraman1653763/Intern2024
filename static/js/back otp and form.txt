otp.js:
function sendOTP() {
    const { isValid, emailValue } = validateInputs();

    if (!isValid) {
        return;
    }

    const otpValue = Math.floor(Math.random() * 1000000); // Generate and set OTP value

    let emailbody = `
        <h2>Your OTP is </h2><h1>${otpValue}</h1>
    `;

    // Store OTP value in localStorage
    localStorage.setItem('otpValue', otpValue);

    Email.send({
        SecureToken: "5fcffd7d-0f66-480e-9fcc-bddfcee79d28",
        To: emailValue,
        From: "vikraman1653763@gmail.com",
        Subject: "this is one time password . please dont share it with others.",
        Body: emailbody
    }).then(
        message => {
            if (message === "OK") {
                alert("OTP sent to your email " + emailValue);
                window.location.href = 'success.html';
            }
        },
        error => {
            console.error("Error sending email:", error);
        }
    );
}

const otpValue = localStorage.getItem('otpValue');

            function verifyOTP() {
                const otpInput = document.getElementById('otp_inp');
                
                if (otpInput) {
                    // Now check whether the entered OTP is valid
                    if (otpInput.value == otpValue) {
                        alert("Email address verified...");
                    } else {
                        alert("Invalid OTP");
                    }
                } else {
                    console.error("Error: Could not find element with id 'otp_inp'");
                }
            }

form.js:



const form = document.getElementById('form');
const username = document.getElementById('username');
const lastname = document.getElementById('lastname');
const email = document.getElementById('email');
const password = document.getElementById('password');
const password2 = document.getElementById('password2');
let otpSent = false;
let firstErrorMessage = null;

const signUpButton = document.getElementById('sign');

form.addEventListener('submit', e => {
    e.preventDefault();

    const isValid = validateInputs();
    if (isValid && otpSent) {
        sendOTP();
        otpSent = true;
    }
   
});

const setError = (element, message) => {
    const inputControl = element.parentElement;
    const errorDisplay = inputControl.querySelector('.error');

    if (errorDisplay) {
        errorDisplay.innerText = message;
        inputControl.classList.add('error');
        inputControl.classList.remove('success');
        showCustomAlert(message);
    }
};

const setSuccess = element => {
    const inputControl = element.parentElement;
    const errorDisplay = inputControl.querySelector('.error');

    if (errorDisplay) {
        errorDisplay.innerText = ''; // Clear the error message
        inputControl.classList.add('success');
        inputControl.classList.remove('error');
       
    }
};
const showCustomAlert = message => {
    const customAlert = document.getElementById('customAlert');
    const customAlertMessage = document.getElementById('customAlertMessage');

    customAlertMessage.innerText = message;
    customAlert.style.display = 'flex';

    const closeButton = document.getElementById('customAlertCloseButton');
    closeButton.addEventListener('click', hideCustomAlert);
};

const hideCustomAlert = () => {
    const customAlert = document.getElementById('customAlert');
    customAlert.style.display = 'none';
};


const isValidEmail = email => {
    const re = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(String(email).toLowerCase());
};

const validateInputs = () => {
    const usernameValue = username.value.trim();
    const lastnameValue = lastname.value.trim();
    const emailValue = email.value.trim();
    const passwordValue = password.value.trim();
    const password2Value = password2.value.trim();
    let isValid = true;
    let firstErrorMessage = null;

    if (usernameValue === '') {
        setError(username, 'Username is required');
        if (!firstErrorMessage) {
            firstErrorMessage = 'Username is required';
        }
        isValid = false;
    } else {
        setSuccess(username);
    }

    if (lastnameValue ===''){
        setError(lastname, 'Last name is required');
        if (!firstErrorMessage) {
            firstErrorMessage = 'Last name is required';
        }
        isValid = false;
    } else {
        setSuccess(lastname);
    }

    if (emailValue === '') {
        setError(email, 'Email is required');
        if (!firstErrorMessage) {
            firstErrorMessage = 'Email is required';
        }
        isValid = false;
    } else if (!isValidEmail(emailValue)) {
        setError(email, 'Provide a valid email address');
        if (!firstErrorMessage) {
            firstErrorMessage = 'Please provide a valid email';
        }
        isValid = false;
    } else {
        setSuccess(email);
    }

    if (passwordValue === '') {
        setError(password, 'Password is required');
        if (!firstErrorMessage) {
            firstErrorMessage = 'Password is required';
        }
        isValid = false;
    } else if (passwordValue.length < 8) {
        setError(password, 'Password must be at least 8 characters.');
        if (!firstErrorMessage) {
            firstErrorMessage = 'Password must be at least 8 characters';
        }
        isValid = false;
    } else {
        setSuccess(password);
    }

    if (password2Value === '') {
        setError(password2, 'Please confirm your password');
        if (!firstErrorMessage) {
            firstErrorMessage = 'Please confirm your password';
        }
        isValid = false;
    } else if (password2Value !== passwordValue) {
        setError(password2, "Passwords don't match");
        if (!firstErrorMessage) {
            firstErrorMessage = "Passwords don't match";
        }
        isValid = false;
    } else {
        setSuccess(password2);
    }

    if (!isValid && firstErrorMessage) {
        alert(firstErrorMessage);
    }

    return { isValid, emailValue };
};

register.html:
<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form Validation</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="{{ url_for('static', filename='css/Register.css') }}">
    <script defer src="{{ url_for('static', filename='js/form.js') }}"></script>
    <script src="https://smtpjs.com/v3/smtp.js"></script>
    <script src="{{ url_for('static', filename='js/otp.js') }}"></script>
   
</head>

<body>
    
    <form class="form " id="form">
        <div class="image-container">
        <img src="static\images\nevar-systems-black3.png">
    </div>
        <p class="title">Register </p>
        <p class="message">Signup now and get full access to our app. </p>
        <div class="flex input-control">
            <label>
                <input id="username" class="input" type="text" placeholder="" required="" autocomplete="username">
                <span>Firstname</span>
            </label>
            
        
    
        <div class=" flex input-control">
            <label>
                <input id="lastname" class="input" type="text" placeholder="" required="" autocomplete="username">
                <span>Lastname</span>
            </label>
            
        </div>
    </div>
        <div class="flex input-control">
            <label>
                <input id="email" class="input" type="email" placeholder="" required="" autocomplete="email">
                <span>Email</span>
            </label>
            
        </div>
    
        <div class="flex input-control">
            <label>
                <input id="password" class="input" type="password" placeholder="" required="" autocomplete="password1">
                <span>Password</span>
            </label>
            
        </div>
    
        <div class="flex input-control">
            <label>
                <input id="password2" class="input" type="password" placeholder="" required="" autocomplete="password2">
                <span>Confirm password</span>
            </label>
            
        </div>
    <div class="signin-container">
        <button id="sign" type="button" onclick="sendOTP()">Sign Up</button>
    </div>
    

        <p class="signin">Already have an account? <a href="#">Sign in</a> </p>
   
       
        
</form>

</body>

</html>

Success.html:

<!-- success.html -->
<!DOCTYPE html>
<html>
    <head>
      <script src="{{ url_for('static', filename='js/otp.js') }}"></script>
      <link rel="stylesheet" href="{{ url_for('static', filename='css/Otp.css') }}">
      
    </head>
    <body>
      <p>Check your email for the OTP</p>
      <p>If you don't see the email in your inbox, please make sure to check your spam or junk folder.</p>
              <div class="otpverify">
  
              <div class="wave-group">
                <input required=""  type="text" class="input"  id="otp_inp">
                <span class="bar"></span>
                <label class="label">
                  <span class="label-char" style="--index: 0">E</span>
                  <span class="label-char" style="--index: 1">n</span>
                  <span class="label-char" style="--index: 2">t</span>
                  <span class="label-char" style="--index: 3">e</span>
                  <span class="label-char" style="--index: 4">r</span>
                  <span class="label-char" style="--index: 5">&nbsp;</span>
                  <span class="label-char" style="--index: 6">y</span>
                  <span class="label-char" style="--index: 7">o</span>
                  <span class="label-char" style="--index: 8">u</span>
                  <span class="label-char" style="--index: 9">r</span>
                  <span class="label-char" style="--index: 10">&nbsp;</span>
                  <span class="label-char" style="--index: 11">O</span>
                  <span class="label-char" style="--index: 12">T</span>
                  <span class="label-char" style="--index: 13">P</span>
                  
                </label>
              </div>
            <button class="btn button " id="otp-btn" onclick="verifyOTP()">Verify<svg fill="currentColor" viewBox="0 0 924 24" class="icon"></svg></button>
        </div>

</html>
